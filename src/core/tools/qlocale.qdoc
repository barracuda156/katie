/****************************************************************************
**
** Copyright (C) 2015 The Qt Company Ltd.
** Copyright (C) 2016 Ivailo Monev
**
** This file is part of the documentation of the Katie Toolkit.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License Usage
** This file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.  Please review the following information to ensure
** the GNU Free Documentation License version 1.3 requirements
** will be met: http://www.gnu.org/copyleft/fdl.html.
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \class QLocale
    \brief The QLocale class converts between numbers and their
    string representations in various languages.

    \reentrant
    \ingroup i18n
    \ingroup string-processing
    \ingroup shared


    QLocale is initialized with a language/country pair in its
    constructor and offers number-to-string and string-to-number
    conversion functions similar to those in QString.

    Example:

    \snippet doc/src/snippets/code/src_corelib_tools_qlocale.cpp 0

    QLocale supports the concept of a default locale, which is
    determined from the system's locale settings at application
    startup. The default locale can be changed by calling the
    static member setDefault(). Setting the default locale has the
    following effects:

    \list
    \i If a QLocale object is constructed with the default constructor,
       it will use the default locale's settings.
    \i QString::toInt(), QString::toDouble(), etc., interpret the
       string according to the default locale. If this fails, it
       falls back on the "C" locale.
    \i QString::arg() uses the default locale to format a number when
       its position specifier in the format string contains an 'L',
       e.g. "%L1".
    \endlist

    The following example illustrates how to use QLocale directly:

    \snippet doc/src/snippets/code/src_corelib_tools_qlocale.cpp 1

    When a language/country pair is specified in the constructor, one
    of three things can happen:

    \list
    \i If the language/country pair is found in the database, it is used.
    \i If the language is found but the country is not, or if the country
       is \c AnyCountry, the language is used with the most
       appropriate available country (for example, Germany for German),
    \i If neither the language nor the country are found, QLocale
       defaults to the default locale (see setDefault()).
    \endlist

    Use language() and country() to determine the actual language and
    country values used.

    An alternative method for constructing a QLocale object is by
    specifying the locale name.

    \snippet doc/src/snippets/code/src_corelib_tools_qlocale.cpp 2

    This constructor converts the locale name to a language/country
    pair; it does not use the system locale database.

    \note For the current keyboard input locale take a look at
    QApplication::keyboardInputLocale().

    QLocale's data is based on Common Locale Data Repository v44.

    The double-to-string and string-to-double conversion functions are
    covered by the following licenses:

    \legalese
    Copyright Â© 2005-2020 Rich Felker, et al.

    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files (the
    "Software"), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:

    The above copyright notice and this permission notice shall be
    included in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
    \endlegalese

    \sa QString::toDouble()
*/

/*!
    \enum QLocale::Language

    This enumerated type is used to specify a language.

    \value AnyLanguage
    \value C The "C" locale is identical in behavior to English/UnitedStates.
    \value Abkhazian
    \value Achinese
    \value Acoli
    \value Adangme
    \value Adyghe
    \value Afar
    \value Afrihili
    \value Afrikaans
    \value Aghem
    \value Ainu
    \value Akan
    \value Akkadian
    \value Akoose
    \value Alabama
    \value Albanian
    \value Aleut
    \value AlgerianArabic
    \value AmericanEnglish
    \value AmericanSignLanguage
    \value Amharic
    \value AncientEgyptian
    \value AncientGreek
    \value Angika
    \value Anii
    \value AoNaga
    \value Arabic
    \value ArabicNajdi
    \value Aragonese
    \value Aramaic
    \value Araona
    \value Arapaho
    \value Arawak
    \value Armenian
    \value Aromanian
    \value Arpitan
    \value Assamese
    \value Asturian
    \value Asu
    \value Atikamekw
    \value Atsam
    \value AustralianEnglish
    \value AustrianGerman
    \value Avaric
    \value Avestan
    \value Awadhi
    \value Aymara
    \value Azerbaijani
    \value Azeri
    \value Badaga
    \value Bafia
    \value Bafut
    \value Bakhtiari
    \value Balinese
    \value Baluchi
    \value Bambara
    \value Bamun
    \value Bangla
    \value Banjar
    \value Basaa
    \value Bashkir
    \value Basque
    \value BatakToba
    \value Bavarian
    \value Beja
    \value Belarusian
    \value Bemba
    \value Bena
    \value Betawi
    \value Bhojpuri
    \value Bikol
    \value Bini
    \value Bishnupriya
    \value Bislama
    \value Blin
    \value Blissymbols
    \value Bodo
    \value Bosnian
    \value Brahui
    \value Braj
    \value BrazilianPortuguese
    \value Breton
    \value BritishEnglish
    \value Buginese
    \value Bulgarian
    \value Bulu
    \value Buriat
    \value Burmese
    \value Caddo
    \value CajunFrench
    \value CanadianEnglish
    \value CanadianFrench
    \value Cantonese
    \value Capiznon
    \value Carib
    \value CarolinaAlgonquian
    \value Catalan
    \value Cayuga
    \value Cebuano
    \value CentralAtlasTamazight
    \value CentralDusun
    \value CentralKurdish
    \value CentralOjibwa
    \value CentralYupik
    \value ChadianArabic
    \value Chagatai
    \value Chakma
    \value Chamorro
    \value Chechen
    \value Cherokee
    \value Cheyenne
    \value Chibcha
    \value Chickasaw
    \value Chiga
    \value Chilcotin
    \value ChimborazoHighlandQuichua
    \value Chinese
    \value ChineseCantonese
    \value ChineseMandarin
    \value ChinookJargon
    \value Chipewyan
    \value Choctaw
    \value ChurchSlavic
    \value Chuukese
    \value Chuvash
    \value ClassicalNewari
    \value ClassicalSyriac
    \value Colognian
    \value Comorian
    \value CongoSwahili
    \value Coptic
    \value Cornish
    \value Corsican
    \value Cree
    \value CrimeanTatar
    \value Croatian
    \value Czech
    \value Dakota
    \value Danish
    \value Dargwa
    \value Dari
    \value Dazaga
    \value Delaware
    \value Dinka
    \value Divehi
    \value Dogri
    \value Dogrib
    \value Duala
    \value Dutch
    \value Dyula
    \value Dzongkha
    \value EasternCanadianInuktitut
    \value EasternFrisian
    \value EasternOjibwa
    \value Efik
    \value EgyptianArabic
    \value Ekajuk
    \value Elamite
    \value Embu
    \value Emilian
    \value English
    \value Erzya
    \value Esperanto
    \value Estonian
    \value EuropeanPortuguese
    \value EuropeanSpanish
    \value Ewe
    \value Ewondo
    \value Extremaduran
    \value Fang
    \value Fanti
    \value Faroese
    \value FijiHindi
    \value Fijian
    \value Filipino
    \value Finnish
    \value Flemish
    \value Fon
    \value Frafra
    \value French
    \value Friulian
    \value Fula
    \value Ga
    \value Gagauz
    \value Galician
    \value GanChinese
    \value Ganda
    \value Gayo
    \value Gbaya
    \value Geez
    \value Georgian
    \value German
    \value GhegAlbanian
    \value Ghomala
    \value Gilaki
    \value Gilbertese
    \value GoanKonkani
    \value Gondi
    \value Gorontalo
    \value Gothic
    \value Grebo
    \value Greek
    \value Guarani
    \value Gujarati
    \value Gusii
    \value Gwichin
    \value Haida
    \value HaitianCreole
    \value HakkaChinese
    \value Halkomelem
    \value Haryanvi
    \value Hausa
    \value Hawaiian
    \value Hebrew
    \value Herero
    \value Hiligaynon
    \value Hindi
    \value HindiLatin
    \value Hinglish
    \value HiriMotu
    \value Hittite
    \value Hmong
    \value HmongNjua
    \value Hungarian
    \value Hupa
    \value Iban
    \value Ibibio
    \value Icelandic
    \value Ido
    \value Igbo
    \value Iloko
    \value InariSami
    \value Indonesian
    \value Ingrian
    \value Ingush
    \value Innuaimun
    \value Interlingua
    \value Interlingue
    \value Inuktitut
    \value Inupiaq
    \value Irish
    \value Italian
    \value JamaicanCreoleEnglish
    \value Japanese
    \value Javanese
    \value Jju
    \value JolaFonyi
    \value JudeoArabic
    \value JudeoPersian
    \value Jutish
    \value Kabardian
    \value Kabuverdianu
    \value Kabyle
    \value Kachin
    \value Kaingang
    \value Kako
    \value Kalaallisut
    \value Kalenjin
    \value Kalmyk
    \value Kamba
    \value Kanembu
    \value Kangri
    \value Kannada
    \value Kanuri
    \value KaraKalpak
    \value KarachayBalkar
    \value Karelian
    \value Kashmiri
    \value Kashubian
    \value Kawi
    \value Kazakh
    \value Kenyang
    \value Khasi
    \value Khmer
    \value Khotanese
    \value Khowar
    \value Kiche
    \value Kikuyu
    \value Kimbundu
    \value Kinaraya
    \value Kinyarwanda
    \value Kirghiz
    \value Kirmanjki
    \value Klingon
    \value Kom
    \value Komi
    \value KomiPermyak
    \value Kongo
    \value Konkani
    \value Korean
    \value Koro
    \value Kosraean
    \value Kotava
    \value KoyraChiini
    \value KoyraboroSenni
    \value Kpelle
    \value Krio
    \value Kuanyama
    \value Kumyk
    \value Kurdish
    \value KurdishCentral
    \value KurdishSorani
    \value Kurukh
    \value Kutenai
    \value Kuvi
    \value Kwakwala
    \value Kwasio
    \value Kyrgyz
    \value Ladino
    \value Lakota
    \value Lamba
    \value Langi
    \value Lao
    \value Latgalian
    \value Latin
    \value LatinAmericanSpanish
    \value Latvian
    \value Laz
    \value Lezghian
    \value Ligurian
    \value Lillooet
    \value Limburgish
    \value Lingala
    \value LinguaFrancaNova
    \value LiteraryChinese
    \value Lithuanian
    \value Livonian
    \value Lojban
    \value Lombard
    \value LouisianaCreole
    \value LowGerman
    \value LowSaxon
    \value LowerSilesian
    \value LowerSorbian
    \value Lozi
    \value LubaKatanga
    \value LubaLulua
    \value Luiseno
    \value LuleSami
    \value Lunda
    \value Luo
    \value Luxembourgish
    \value Luyia
    \value Maba
    \value Macedonian
    \value Machame
    \value Madurese
    \value Mafa
    \value Magahi
    \value MainFranconian
    \value Maithili
    \value Makasar
    \value Makhuwa
    \value MakhuwaMeetto
    \value Makonde
    \value Malagasy
    \value Malay
    \value Malayalam
    \value MaliseetPassamaquoddy
    \value Maltese
    \value Manchu
    \value Mandar
    \value MandarinChinese
    \value Mandingo
    \value Manipuri
    \value Manx
    \value Maori
    \value Mapuche
    \value Marathi
    \value Mari
    \value Marshallese
    \value Marwari
    \value Masai
    \value Mazanderani
    \value Medumba
    \value Mende
    \value Mentawai
    \value Meru
    \value Meta
    \value MexicanSpanish
    \value Michif
    \value MiddleDutch
    \value MiddleEnglish
    \value MiddleFrench
    \value MiddleHighGerman
    \value MiddleIrish
    \value Mikmaw
    \value MinNanChinese
    \value Minangkabau
    \value Mingrelian
    \value Mirandese
    \value Mizo
    \value ModernStandardArabic
    \value Mohawk
    \value Moksha
    \value Moldavian
    \value Mongo
    \value Mongolian
    \value Montenegrin
    \value MooseCree
    \value Morisyen
    \value MoroccanArabic
    \value Mossi
    \value Multiplelanguages
    \value Mundang
    \value Muscogee
    \value MuslimTat
    \value MyanmarLanguage
    \value Myene
    \value NKo
    \value NajdiArabic
    \value Nama
    \value NauruLanguage
    \value Navajo
    \value Ndonga
    \value Neapolitan
    \value Nepali
    \value Newari
    \value Ngambay
    \value Ngiemboon
    \value Ngomba
    \value Nheengatu
    \value Nias
    \value NigerianPidgin
    \value Niuean
    \value Nogai
    \value Nolinguisticcontent
    \value NorthNdebele
    \value NorthernEastCree
    \value NorthernFrisian
    \value NorthernHaida
    \value NorthernLuri
    \value NorthernSami
    \value NorthernSotho
    \value NorthernTutchone
    \value NorthwesternOjibwa
    \value Norwegian
    \value NorwegianBokmal
    \value NorwegianNynorsk
    \value Novial
    \value Nuer
    \value Nyamwezi
    \value Nyanja
    \value Nyankole
    \value NyasaTonga
    \value Nyoro
    \value Nzima
    \value Obolo
    \value Occitan
    \value Odia
    \value OjiCree
    \value Ojibwa
    \value Okanagan
    \value OldEnglish
    \value OldFrench
    \value OldHighGerman
    \value OldIrish
    \value OldNorse
    \value OldPersian
    \value OldProvencal
    \value Oromo
    \value Osage
    \value Ossetic
    \value OttomanTurkish
    \value Pahlavi
    \value PalatineGerman
    \value Palauan
    \value Pali
    \value Pampanga
    \value Pangasinan
    \value Papiamento
    \value Pashto
    \value PennsylvaniaGerman
    \value Persian
    \value Phoenician
    \value Picard
    \value Piedmontese
    \value Pijin
    \value PlainsCree
    \value Plautdietsch
    \value Pohnpeian
    \value Polish
    \value Pontic
    \value Portuguese
    \value Prussian
    \value Punjabi
    \value Pushto
    \value Quechua
    \value Rajasthani
    \value Rapanui
    \value Rarotongan
    \value Riffian
    \value Rohingya
    \value Romagnol
    \value Romanian
    \value Romansh
    \value Romany
    \value Rombo
    \value Rotuman
    \value Roviana
    \value Rundi
    \value Russian
    \value Rusyn
    \value Rwa
    \value Saamia
    \value Saho
    \value SamaritanAramaic
    \value Samburu
    \value SamiInari
    \value SamiLule
    \value SamiNorthern
    \value SamiSkolt
    \value SamiSouthern
    \value Samoan
    \value Samogitian
    \value Sandawe
    \value Sango
    \value Sangu
    \value Sanskrit
    \value Santali
    \value Sardinian
    \value Sasak
    \value SassareseSardinian
    \value SaterlandFrisian
    \value Saurashtra
    \value Scots
    \value ScottishGaelic
    \value Selayar
    \value Selkup
    \value Sena
    \value Seneca
    \value Serbian
    \value SerboCroatian
    \value Serer
    \value Seri
    \value SeselwaCreoleFrench
    \value Shambala
    \value Shan
    \value Shona
    \value SichuanYi
    \value Sicilian
    \value Sidamo
    \value Siksika
    \value Silesian
    \value SimplifiedChinese
    \value SimplifiedMandarinChinese
    \value Sindhi
    \value Sinhala
    \value SkoltSami
    \value Slave
    \value Slovak
    \value Slovenian
    \value Soga
    \value Sogdien
    \value Somali
    \value Soninke
    \value SouthNdebele
    \value SouthernAltai
    \value SouthernEastCree
    \value SouthernHaida
    \value SouthernKurdish
    \value SouthernLushootseed
    \value SouthernSami
    \value SouthernSotho
    \value SouthernTutchone
    \value Spanish
    \value SrananTongo
    \value StandardMoroccanTamazight
    \value StraitsSalish
    \value Sukuma
    \value Sumerian
    \value Sundanese
    \value Susu
    \value Swahili
    \value SwampyCree
    \value Swati
    \value Swedish
    \value SwissFrench
    \value SwissGerman
    \value SwissHighGerman
    \value Syriac
    \value Tachelhit
    \value Tagalog
    \value Tagish
    \value Tahitian
    \value Tahltan
    \value TaiDam
    \value Taita
    \value Tajik
    \value Talysh
    \value Tamashek
    \value Tamil
    \value Taroko
    \value Tasawaq
    \value Tatar
    \value Telugu
    \value Tereno
    \value Teso
    \value Tetum
    \value Thai
    \value Tibetan
    \value Tigre
    \value Tigrinya
    \value Timne
    \value Tiv
    \value Tlingit
    \value TokPisin
    \value TokelauLanguage
    \value TokiPona
    \value Tongan
    \value TornedalenFinnish
    \value Torwali
    \value TraditionalChinese
    \value TraditionalMandarinChinese
    \value Tsakhur
    \value Tsakonian
    \value Tsimshian
    \value Tsonga
    \value Tswana
    \value Tulu
    \value Tumbuka
    \value TunisianArabic
    \value Turkish
    \value Turkmen
    \value Turoyo
    \value TuvaluLanguage
    \value Tuvinian
    \value Twi
    \value Tyap
    \value UKEnglish
    \value USEnglish
    \value Udmurt
    \value Ugaritic
    \value Uighur
    \value Ukrainian
    \value Umbundu
    \value Unknownlanguage
    \value UpperSorbian
    \value Urdu
    \value Uyghur
    \value Uzbek
    \value Vai
    \value Venda
    \value Venetian
    \value Veps
    \value Vietnamese
    \value Volapuk
    \value Voro
    \value Votic
    \value Vunjo
    \value Walloon
    \value Walser
    \value Waray
    \value Warlpiri
    \value Washo
    \value Wayuu
    \value Welsh
    \value WestFlemish
    \value WesternBalochi
    \value WesternCanadianInuktitut
    \value WesternFrisian
    \value WesternMari
    \value WesternOjibwa
    \value WesternPanjabi
    \value Wolaytta
    \value Wolof
    \value WoodsCree
    \value WuChinese
    \value Xhosa
    \value XiangChinese
    \value Yakut
    \value Yangben
    \value Yao
    \value Yapese
    \value Yemba
    \value Yiddish
    \value Yoruba
    \value Zapotec
    \value Zarma
    \value Zaza
    \value Zeelandic
    \value Zenaga
    \value Zhuang
    \value ZoroastrianDari
    \value Zulu
    \value Zuni
    \omitvalue LastLanguage

    \sa language(), languageToString()
*/

/*!
    \enum QLocale::Country

    This enumerated type is used to specify a country.

    \value AnyCountry
    \value Afghanistan
    \value Africa
    \value AlandIslands
    \value Albania
    \value Algeria
    \value AmericanSamoa
    \value Americas
    \value Andorra
    \value Angola
    \value Anguilla
    \value Antarctica
    \value AntiguaAndBarbuda
    \value AotearoaNewZealand
    \value Argentina
    \value Armenia
    \value Aruba
    \value AscensionIsland
    \value Asia
    \value Australasia
    \value Australia
    \value Austria
    \value Azerbaijan
    \value Bahamas
    \value Bahrain
    \value Bangladesh
    \value Barbados
    \value Belarus
    \value Belgium
    \value Belize
    \value Benin
    \value Bermuda
    \value Bhutan
    \value Bolivia
    \value Bosnia
    \value BosniaAndHerzegovina
    \value Botswana
    \value BouvetIsland
    \value Brazil
    \value BritishIndianOceanTerritory
    \value BritishVirginIslands
    \value Brunei
    \value Bulgaria
    \value BurkinaFaso
    \value Burundi
    \value CaboVerde
    \value Cambodia
    \value Cameroon
    \value Canada
    \value CanaryIslands
    \value CapeVerde
    \value Caribbean
    \value CaribbeanNetherlands
    \value CaymanIslands
    \value CentralAfricanRepublic
    \value CentralAmerica
    \value CentralAsia
    \value CeutaAndMelilla
    \value Chad
    \value ChagosArchipelago
    \value Chile
    \value China
    \value ChristmasIsland
    \value ClippertonIsland
    \value CocosKeelingIslands
    \value Colombia
    \value Comoros
    \value CongoBrazzaville
    \value CongoDRC
    \value CongoKinshasa
    \value CongoRepublic
    \value CookIslands
    \value CostaRica
    \value CotedIvoire
    \value Croatia
    \value Cuba
    \value Curacao
    \value Cyprus
    \value CzechRepublic
    \value Czechia
    \value Denmark
    \value DiegoGarcia
    \value Djibouti
    \value Dominica
    \value DominicanRepublic
    \value EastTimor
    \value EasternAfrica
    \value EasternAsia
    \value EasternEurope
    \value Ecuador
    \value Egypt
    \value ElSalvador
    \value EquatorialGuinea
    \value Eritrea
    \value Estonia
    \value Eswatini
    \value Ethiopia
    \value Europe
    \value EuropeanUnion
    \value Eurozone
    \value FalklandIslands
    \value FalklandIslandsIslasMalvinas
    \value FaroeIslands
    \value Fiji
    \value Finland
    \value France
    \value FrenchGuiana
    \value FrenchPolynesia
    \value FrenchSouthernTerritories
    \value Gabon
    \value Gambia
    \value Georgia
    \value Germany
    \value Ghana
    \value Gibraltar
    \value Greece
    \value Greenland
    \value Grenada
    \value Guadeloupe
    \value Guam
    \value Guatemala
    \value Guernsey
    \value Guinea
    \value GuineaBissau
    \value Guyana
    \value Haiti
    \value HeardAndMcDonaldIslands
    \value Honduras
    \value HongKong
    \value HongKongSARChina
    \value Hungary
    \value Iceland
    \value India
    \value Indonesia
    \value Iran
    \value Iraq
    \value Ireland
    \value IsleofMan
    \value Israel
    \value Italy
    \value IvoryCoast
    \value Jamaica
    \value Japan
    \value Jersey
    \value Jordan
    \value Kazakhstan
    \value Kenya
    \value Kiribati
    \value Kosovo
    \value Kuwait
    \value Kyrgyzstan
    \value Laos
    \value LatinAmerica
    \value Latvia
    \value Lebanon
    \value Lesotho
    \value Liberia
    \value Libya
    \value Liechtenstein
    \value Lithuania
    \value Luxembourg
    \value Macao
    \value MacaoSARChina
    \value Madagascar
    \value Malawi
    \value Malaysia
    \value Maldives
    \value Mali
    \value Malta
    \value MarshallIslands
    \value Martinique
    \value Mauritania
    \value Mauritius
    \value Mayotte
    \value Melanesia
    \value Mexico
    \value Micronesia
    \value MicronesianRegion
    \value MiddleAfrica
    \value Moldova
    \value Monaco
    \value Mongolia
    \value Montenegro
    \value Montserrat
    \value Morocco
    \value Mozambique
    \value Myanmar
    \value MyanmarBurma
    \value Namibia
    \value Nauru
    \value Nepal
    \value Netherlands
    \value NewCaledonia
    \value NewZealand
    \value Nicaragua
    \value Niger
    \value Nigeria
    \value Niue
    \value NorfolkIsland
    \value NorthAmerica
    \value NorthKorea
    \value NorthMacedonia
    \value NorthernAfrica
    \value NorthernAmerica
    \value NorthernEurope
    \value NorthernMarianaIslands
    \value Norway
    \value Oceania
    \value Oman
    \value OutlyingOceania
    \value Pakistan
    \value Palau
    \value Palestine
    \value PalestinianTerritories
    \value Panama
    \value PapuaNewGuinea
    \value Paraguay
    \value Peru
    \value Philippines
    \value PitcairnIslands
    \value Poland
    \value Polynesia
    \value Portugal
    \value PseudoAccents
    \value PseudoBidi
    \value PuertoRico
    \value Qatar
    \value Reunion
    \value Romania
    \value Russia
    \value Rwanda
    \value Samoa
    \value SanMarino
    \value SaoTomeAndPrincipe
    \value Sark
    \value SaudiArabia
    \value Senegal
    \value Serbia
    \value Seychelles
    \value SierraLeone
    \value Singapore
    \value SintMaarten
    \value Slovakia
    \value Slovenia
    \value SolomonIslands
    \value Somalia
    \value SouthAfrica
    \value SouthAmerica
    \value SouthGeorgiaAndSouthSandwichIslands
    \value SouthKorea
    \value SouthSudan
    \value SoutheastAsia
    \value SouthernAfrica
    \value SouthernAsia
    \value SouthernEurope
    \value Spain
    \value SriLanka
    \value StBarthelemy
    \value StHelena
    \value StKittsAndNevis
    \value StLucia
    \value StMartin
    \value StPierreAndMiquelon
    \value StVincentAndGrenadines
    \value SubSaharanAfrica
    \value Sudan
    \value Suriname
    \value SvalbardAndJanMayen
    \value Swaziland
    \value Sweden
    \value Switzerland
    \value Syria
    \value Taiwan
    \value Tajikistan
    \value Tanzania
    \value Thailand
    \value TimorLeste
    \value Togo
    \value Tokelau
    \value Tonga
    \value TrinidadAndTobago
    \value TristandaCunha
    \value Tunisia
    \value Turkey
    \value Turkiye
    \value Turkmenistan
    \value TurksAndCaicosIslands
    \value Tuvalu
    \value UK
    \value UN
    \value US
    \value Uganda
    \value Ukraine
    \value UnitedArabEmirates
    \value UnitedKingdom
    \value UnitedNations
    \value UnitedStates
    \value UnitedStatesOutlyingIslands
    \value UnitedStatesVirginIslands
    \value UnknownRegion
    \value Uruguay
    \value Uzbekistan
    \value Vanuatu
    \value VaticanCity
    \value Venezuela
    \value Vietnam
    \value WallisAndFutuna
    \value WesternAfrica
    \value WesternAsia
    \value WesternEurope
    \value WesternSahara
    \value Yemen
    \value Zambia
    \value Zimbabwe
    \value world
    \omitvalue LastCountry

    \sa country(), countryToString()
*/

/*!
    \enum QLocale::Script
    \since 4.8

    This enumerated type is used to specify a script.

    \value AnyScript
    \value AdlamScript
    \value AfakaScript
    \value AhomScript
    \value AnatolianHieroglyphsScript
    \value ArabicScript
    \value ArmenianScript
    \value AvestanScript
    \value BalineseScript
    \value BamumScript
    \value BanglaScript
    \value BassaVahScript
    \value BatakScript
    \value BhaiksukiScript
    \value BlissymbolsScript
    \value BookPahlaviScript
    \value BopomofoScript
    \value BrahmiScript
    \value BrailleScript
    \value BugineseScript
    \value BuhidScript
    \value CarianScript
    \value CaucasianAlbanianScript
    \value ChakmaScript
    \value ChamScript
    \value CherokeeScript
    \value ChorasmianScript
    \value CirthScript
    \value CopticScript
    \value CypriotScript
    \value CyproMinoanScript
    \value CyrillicScript
    \value DeseretScript
    \value DevanagariScript
    \value DivesAkuruScript
    \value DograScript
    \value DuployanshorthandScript
    \value EasternSyriacScript
    \value EgyptiandemoticScript
    \value EgyptianhieraticScript
    \value EgyptianhieroglyphsScript
    \value ElbasanScript
    \value ElymaicScript
    \value EmojiScript
    \value EstrangeloSyriacScript
    \value EthiopicScript
    \value FrakturLatinScript
    \value FraserScript
    \value GaelicLatinScript
    \value GeorgianKhutsuriScript
    \value GeorgianScript
    \value GlagoliticScript
    \value GothicScript
    \value GranthaScript
    \value GreekScript
    \value GujaratiScript
    \value GunjalaGondiScript
    \value GurmukhiScript
    \value HanScript
    \value HangulScript
    \value HanifiRohingyaScript
    \value HanifiScript
    \value HanunooScript
    \value HanwithBopomofoScript
    \value HatranScript
    \value HebrewScript
    \value HiraganaScript
    \value ImperialAramaicScript
    \value IndusScript
    \value InheritedScript
    \value InscriptionalPahlaviScript
    \value InscriptionalParthianScript
    \value JamoScript
    \value JapaneseScript
    \value JapanesesyllabariesScript
    \value JavaneseScript
    \value JurchenScript
    \value KaithiScript
    \value KannadaScript
    \value KatakanaScript
    \value KawiScript
    \value KayahLiScript
    \value KharoshthiScript
    \value KhitansmallscriptScript
    \value KhmerScript
    \value KhojkiScript
    \value KhudawadiScript
    \value KoreanScript
    \value KpelleScript
    \value LannaScript
    \value LaoScript
    \value LatinScript
    \value LepchaScript
    \value LimbuScript
    \value LinearAScript
    \value LinearBScript
    \value LomaScript
    \value LycianScript
    \value LydianScript
    \value MahajaniScript
    \value MakasarScript
    \value MalayalamScript
    \value MandaeanScript
    \value ManichaeanScript
    \value MarchenScript
    \value MasaramGondiScript
    \value MathematicalNotationScript
    \value MayanhieroglyphsScript
    \value MedefaidrinScript
    \value MeiteiMayekScript
    \value MendeScript
    \value MeroiticCursiveScript
    \value MeroiticScript
    \value ModiScript
    \value MongolianScript
    \value MoonScript
    \value MroScript
    \value MultaniScript
    \value MyanmarScript
    \value NKoScript
    \value NabataeanScript
    \value NagMundariScript
    \value NandinagariScript
    \value NastaliqScript
    \value NaxiGebaScript
    \value NewTaiLueScript
    \value NewaScript
    \value NushuScript
    \value NyiakengPuachueHmongScript
    \value OdiaScript
    \value OghamScript
    \value OlChikiScript
    \value OldChurchSlavonicCyrillicScript
    \value OldHungarianScript
    \value OldItalicScript
    \value OldNorthArabianScript
    \value OldPermicScript
    \value OldPersianScript
    \value OldSogdianScript
    \value OldSouthArabianScript
    \value OldUyghurScript
    \value OrkhonScript
    \value OsageScript
    \value OsmanyaScript
    \value PahawhHmongScript
    \value PalmyreneScript
    \value PauCinHauScript
    \value PersoArabicScript
    \value PhagspaScript
    \value PhoenicianScript
    \value PollardPhoneticScript
    \value PsalterPahlaviScript
    \value RejangScript
    \value RongorongoScript
    \value RunicScript
    \value SACuneiformScript
    \value SamaritanScript
    \value SaratiScript
    \value SaurashtraScript
    \value SharadaScript
    \value ShavianScript
    \value SiddhamScript
    \value SignWritingScript
    \value SimplifiedHanScript
    \value SimplifiedScript
    \value SinhalaScript
    \value SogdianScript
    \value SoraSompengScript
    \value SoyomboScript
    \value SumeroAkkadianCuneiformScript
    \value SundaneseScript
    \value SylotiNagriScript
    \value SymbolsScript
    \value SyriacScript
    \value TagalogScript
    \value TagbanwaScript
    \value TaiLeScript
    \value TaiVietScript
    \value TakriScript
    \value TamilScript
    \value TangsaScript
    \value TangutScript
    \value TeluguScript
    \value TengwarScript
    \value ThaanaScript
    \value ThaiScript
    \value TibetanScript
    \value TifinaghScript
    \value TirhutaScript
    \value TotoScript
    \value TraditionalHanScript
    \value TraditionalScript
    \value UCASScript
    \value UgariticScript
    \value UnifiedCanadianAboriginalSyllabicsScript
    \value UnwrittenScript
    \value VaiScript
    \value VarangKshitiScript
    \value VisibleSpeechScript
    \value VithkuqiScript
    \value WanchoScript
    \value WesternSyriacScript
    \value WoleaiScript
    \value YezidiScript
    \value YiScript
    \value ZanabazarSquareScript
    \value ZawgyiScript
    \omitvalue LastScript

    \sa script(), scriptToString(), languageToString()
*/

/*!
    \enum QLocale::FormatType

    This enum describes the types of format that can be used when
    converting QDate and QTime objects to strings.

    \value LongFormat The long version of day and month names; for
    example, returning "January" as a month name.

    \value ShortFormat The short version of day and month names; for
    example, returning "Jan" as a month name.

    \value NarrowFormat A special version of day and month names for
    use when space is limited; for example, returning "J" as a month
    name. Note that the narrow format might contain the same text for
    different months and days or it can even be an empty string if the
    locale doesn't support narrow names, so you should avoid using it
    for date formatting. Also, for the system locale this format is
    the same as ShortFormat.
*/

/*!
    \enum QLocale::NumberOption

    This enum defines a set of options for number-to-string and string-to-number
    conversions. They can be retrieved with numberOptions() and set with
    setNumberOptions().

    \value OmitGroupSeparator If this option is set, the number-to-string functions
            will not insert group separators in their return values. The default
            is to insert group separators.
    \value RejectGroupSeparator If this option is set, the string-to-number functions
            will fail if they encounter group separators in their input. The default
            is to accept numbers containing correctly placed group separators.

    \sa setNumberOptions() numberOptions()
*/

/*!
    \enum QLocale::MeasurementSystem

    This enum defines which units are used for measurement.

    \value MetricSystem This value indicates metric units, such as meters,
            centimeters and millimeters.
    \value ImperialSystem This value indicates imperial units, such as inches and
            miles. There are several distinct imperial systems in the world; this
            value stands for the official United States imperial units.
    \value UKSystem This value indicates mix of metric and imperial units used in
            Great Britain.

    \since 4.4
*/


/*!
    \fn bool QLocale::operator==(const QLocale &other) const

    Returns true if the QLocale object is the same as the \a other
    locale specified; otherwise returns false.
*/

/*!
    \fn bool QLocale::operator!=(const QLocale &other) const

    Returns true if the QLocale object is not the same as the \a other
    locale specified; otherwise returns false.
*/

/*!
\fn QString QLocale::toString(short i) const

\overload

\sa toShort()
*/

/*!
\fn QString QLocale::toString(ushort i) const

\overload

\sa toUShort()
*/

/*!
\fn QString QLocale::toString(int i) const

\overload

\sa toInt()
*/

/*!
\fn QString QLocale::toString(uint i) const

\overload

\sa toUInt()
*/

/*
\fn QString QLocale::toString(long i) const

\overload

\sa  toLong()
*/

/*
\fn QString QLocale::toString(ulong i) const

\overload

\sa toULong()
*/

/*!
\fn QString QLocale::toString(float i, char f = 'g', int prec = 6) const

\overload

\a f and \a prec have the same meaning as in QString::number(double, char, int).

\sa toDouble()
*/
